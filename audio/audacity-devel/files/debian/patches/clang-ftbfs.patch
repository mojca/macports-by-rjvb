Description: Fix build failure with clang
 Fixed undefined reference error in lib-src/libnyquist/nyquist/ffts/src/fftlib.c
Author: Arthur Marble <arthur@info9.net>
Bug-Debian: https://bugs.debian.org/757531

--- a/lib-src/libnyquist/nyquist/ffts/src/fftlib.c
+++ b/lib-src/libnyquist/nyquist/ffts/src/fftlib.c
@@ -61,8 +61,8 @@
 parts of ffts1
 *************************************************/
 
-inline void bitrevR2(float *ioptr, long M, short *BRLow);
-inline void bitrevR2(float *ioptr, long M, short *BRLow){
+static inline void bitrevR2(float *ioptr, long M, short *BRLow);
+static inline void bitrevR2(float *ioptr, long M, short *BRLow){
 /*** bit reverse and first radix 2 stage of forward or inverse fft ***/
 float	f0r;
 float	f0i;
@@ -512,8 +512,8 @@
 }
 }
 
-inline void bfR4(float *ioptr, long M, long NDiffU);
-inline void bfR4(float *ioptr, long M, long NDiffU){
+static inline void bfR4(float *ioptr, long M, long NDiffU);
+static inline void bfR4(float *ioptr, long M, long NDiffU){
 /*** 1 radix 4 stage ***/
 unsigned long	pos;
 unsigned long	posi;
@@ -721,8 +721,8 @@
 
 }
 
-inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
-inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
+static inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
+static inline void bfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
 /***   RADIX 8 Stages	***/
 unsigned long	pos;
 unsigned long	posi;
@@ -1125,8 +1125,8 @@
 parts of iffts1
 *************************************************/
 
-inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale);
-inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale){
+static inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale);
+static inline void scbitrevR2(float *ioptr, long M, short *BRLow, float scale){
 /*** scaled bit reverse and first radix 2 stage forward or inverse fft ***/
 float	f0r;
 float	f0i;
@@ -1347,8 +1347,8 @@ ioptr[6] = scale*f3r;
 ioptr[7] = scale*f3i;
 }

-inline void ifft8pt(float *ioptr, float scale);
-inline void ifft8pt(float *ioptr, float scale){
+static inline void ifft8pt(float *ioptr, float scale);
+static inline void ifft8pt(float *ioptr, float scale){
 /***   RADIX 8 ifft	***/
 float w0r = 1.0/MYROOT2; /* cos(pi/4)	*/
 float f0r, f0i, f1r, f1i, f2r, f2i, f3r, f3i;
@@ -1467,8 +1467,8 @@
 ioptr[15] = scale*f6i;
 }
 
-inline void ibfR2(float *ioptr, long M, long NDiffU);
-inline void ibfR2(float *ioptr, long M, long NDiffU){
+static inline void ibfR2(float *ioptr, long M, long NDiffU);
+static inline void ibfR2(float *ioptr, long M, long NDiffU){
 /*** 2nd radix 2 stage ***/
 unsigned long	pos;
 unsigned long	posi;
@@ -1576,8 +1576,8 @@
 }
 }
 
-inline void ibfR4(float *ioptr, long M, long NDiffU);
-inline void ibfR4(float *ioptr, long M, long NDiffU){
+static inline void ibfR4(float *ioptr, long M, long NDiffU);
+static inline void ibfR4(float *ioptr, long M, long NDiffU){
 /*** 1 radix 4 stage ***/
 unsigned long	pos;
 unsigned long	posi;
@@ -1785,8 +1785,8 @@
 
 }
 
-inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
-inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
+static inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
+static inline void ibfstages(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
 /***   RADIX 8 Stages	***/
 unsigned long	pos;
 unsigned long	posi;
@@ -2109,8 +2109,8 @@
 }
 }
 
-void ifftrecurs(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
-void ifftrecurs(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
+static inline void ifftrecurs(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt);
+static inline void ifftrecurs(float *ioptr, long M, float *Utbl, long Ustride, long NDiffU, long StageCnt){
 /* recursive bfstages calls to maximize on chip cache efficiency */
 long i1;
 if (M <= MCACHE)
@@ -2318,8 +2318,8 @@
 ioptr[7] = scale*f3i;
 }
 
-inline void rfft8pt(float *ioptr);
-inline void rfft8pt(float *ioptr){
+static inline void rfft8pt(float *ioptr);
+static inline void rfft8pt(float *ioptr){
 /***   RADIX 16 rfft	***/
 float w0r = 1.0/MYROOT2; /* cos(pi/4)	*/
 float w1r = MYCOSPID8; /* cos(pi/8)	*/
@@ -2477,8 +2477,8 @@
 ioptr[15] = scale*f6i;
 }
 
-inline void frstage(float *ioptr, long M, float *Utbl);
-inline void frstage(float *ioptr, long M, float *Utbl){
+static inline void frstage(float *ioptr, long M, float *Utbl);
+static inline void frstage(float *ioptr, long M, float *Utbl){
 /*	Finish RFFT		*/
 
 unsigned long 	pos;
@@ -2811,8 +2811,8 @@
 ioptr[7] = scale*f3i;
 }
 
-inline void rifft8pt(float *ioptr, float scale);
-inline void rifft8pt(float *ioptr, float scale){
+static inline void rifft8pt(float *ioptr, float scale);
+static inline void rifft8pt(float *ioptr, float scale){
 /***   RADIX 16 rifft	***/
 float w0r = 1.0/MYROOT2; /* cos(pi/4)	*/
 float w1r = MYCOSPID8; /* cos(pi/8)	*/
@@ -2968,8 +2968,8 @@
 ioptr[15] = scale*f6i;
 }
 
-inline void ifrstage(float *ioptr, long M, float *Utbl);
-inline void ifrstage(float *ioptr, long M, float *Utbl){
+static inline void ifrstage(float *ioptr, long M, float *Utbl);
+static inline void ifrstage(float *ioptr, long M, float *Utbl){
 /*	Start RIFFT		*/
 
 unsigned long 	pos;
